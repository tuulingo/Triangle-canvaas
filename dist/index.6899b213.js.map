{"mappings":"AAAAA,OAAOC,iBAAiB,QAAQ,KAC5B,IAAIC,EAAKC,SAASC,cAAc,WAChCF,EAAGG,MAAQL,OAAOM,WAClBJ,EAAGK,OAASP,OAAOQ,YACnB,IAAIC,EAAMP,EAAGQ,WAAW,MAExB,IAAIH,EAASP,OAAOQ,YAChBH,EAAQL,OAAOM,WAGfK,EAAgB,EAEpBC,OAAOP,MAAQA,EACfO,OAAOL,OAASA,EAEhB,IAAIM,EAAY,IAAIC,EAAa,IAANT,EAAmB,IAAPE,EAAa,GAChDQ,EAAa,IAAID,EAAa,GAANT,EAAkB,IAAPE,EAAa,GAChDS,EAAW,IAAIF,EAAa,IAANT,EAAmB,IAAPE,EAAa,GACnD,MAAMU,EAAe,IAAIC,MACzBD,EAAaE,KAAKN,EAAWE,EAAYC,GAEzCI,KAAKC,UAA2B,OAAfA,EAAuB,EAAIN,EAC5CK,KAAKE,QAAuB,OAAbA,QAAqB,EAAIN,EACxC,IAAIK,EAAYJ,EAAaM,KAAKC,MAAMD,KAAKE,SAASR,EAAaS,SAI/DC,GAASX,EAASY,EAAEb,EAAWa,GAAG,EAClCC,GAASb,EAASc,EAAEf,EAAWe,GAAG,EACtCC,QAAQC,IAAIhB,EAASY,EAAI,KAAOZ,EAASc,EAAI,mBAAqBf,EAAWa,EAAI,KAAMb,EAAWe,GAClG,IAAIG,EAAS,IAAInB,EAAOa,EAAOE,EAAO,GACvB,IAAIf,EAKvB,SAASA,EAAOc,EAAGE,EAAGI,EAAGb,EAAWC,GAChC,aACAF,KAAKQ,EAAW,OAAPA,EAAe,EAAIA,EAC5BR,KAAKU,EAAW,OAAPA,EAAe,EAAIA,EAC5BV,KAAKc,EAAW,OAAPA,EAAe,EAAIA,EAE5Bd,KAAKe,KAAO,SAASC,GACjBA,EAAIC,YACJD,EAAIE,IAAIlB,KAAKQ,EAAGR,KAAKU,EAAGV,KAAKc,EAAG,EAAW,EAARX,KAAKgB,IACxCH,EAAID,QAeZ,IAJAtB,EAAUsB,KAAK1B,GACfM,EAAWoB,KAAK1B,GAChBO,EAASmB,KAAK1B,KAIW,GAAjBE,IAEAsB,EAAOE,KAAK1B,GACZE","sources":["main.js"],"sourcesContent":["window.addEventListener(\"load\", () => {\n    let el = document.querySelector(\"#canvas\");\n    el.width = window.innerWidth;\n    el.height = window.innerHeight;\n    let ctx = el.getContext(\"2d\");\n\n    var height = window.innerHeight\n    var width = window.innerWidth\n\n    var dotCount = 0;\n    var firstDotCount = 0;\n    \n    canvas.width = width;\n    canvas.height = height;\n\n    var circright = new Circle(width*0.66, height*0.75, 2);\n    var circmiddle = new Circle(width*0.5, height*0.25, 2);\n    var circleft = new Circle(width*0.33, height*0.75, 2);\n    const anchorPoints = new Array();\n    anchorPoints.push(circright, circmiddle, circleft);\n\n    this.targetDot = (targetDot === null) ? 0 : circmiddle;\n    this.lastDot = (lastDot === null) ? 0 : circleft;\n    var targetDot = anchorPoints[Math.floor(Math.random()*anchorPoints.length)];\n    // var lastDot = anchorPoints[anchorPoints.length];\n    // var increment_x = (targetDot.x-lastDot.x)/2;\n    // var increment_y = (targetDot.y-lastDot.y)/2;\n    var testx = (circleft.x+circmiddle.x)/2\n    var testy = (circleft.y+circmiddle.y)/2\n    console.log(circleft.x + \"  \" + circleft.y + \" <-left middle->\" + circmiddle.x + \"  \" +circmiddle.y)\n    var newDot = new Circle(testx, testy, 2); \n    var firstDot = new Circle()\n    // console.log(testx + \"<--x y-->  \" + testy);\n    \n//targetDot is the dot that is going to be targeted next, lastDot i\n//Define the circle\nfunction Circle(x, y, r, targetDot, lastDot) {\n    \"use strict\";\n    this.x = (x === null) ? 0 : x;\n    this.y = (y === null) ? 0 : y;\n    this.r = (r === null) ? 2 : r;\n    \n    this.fill = function(ctx) {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.r, 0, Math.PI*2);\n        ctx.fill();\n    }\n\n    // this.randomDot = function(ctx, targetDot, lastDot) {\n    //     ctx.beginPath();\n    //     ctx.arc(this.increment_x, this.increment_y, this.r, 0, Math.PI*2);\n\n    // }\n}\n\n//Draw the triangle\ncircright.fill(ctx);\ncircmiddle.fill(ctx);\ncircleft.fill(ctx);\n\nwhile ( dotCount < 2 ) {\n\n    if (firstDotCount != 1)\n    {   \n        newDot.fill(ctx);\n        firstDotCount++;\n    }\n    else\n    {\n\n    }\n};\n});"],"names":["window","addEventListener","el","document","querySelector","width","innerWidth","height","innerHeight","ctx1","getContext","firstDotCount","canvas","circright","Circle","circmiddle","circleft","anchorPoints","Array","push","this","targetDot","lastDot","Math","floor","random","length","testx","x","testy","y","console","log","newDot","r","fill","ctx","beginPath","arc","PI"],"version":3,"file":"index.6899b213.js.map"}